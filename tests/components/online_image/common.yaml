wifi:
  ssid: MySSID
  password: password1

# Purposely test that `online_image:` does auto-load `image:`
# Keep the `image:` undefined.
# image:
online_image:
  - id: online_binary_image
    url: http://www.libpng.org/pub/png/img_png/pnglogo-blk-tiny.png
    format: PNG
    type: BINARY
    resize: 50x50
  - id: online_binary_transparent_image
    url: http://www.libpng.org/pub/png/img_png/pnglogo-blk-tiny.png
    type: TRANSPARENT_BINARY
    format: png
  - id: online_rgba_image
    url: http://www.libpng.org/pub/png/img_png/pnglogo-blk-tiny.png
    format: PNG
    type: RGBA
  - id: online_rgb24_image
    url: http://www.libpng.org/pub/png/img_png/pnglogo-blk-tiny.png
    format: PNG
    type: RGB24
    use_transparency: true
  - id: online_image_headers
    url: http://www.libpng.org/pub/png/img_png/pnglogo-blk-tiny.png
    format: PNG
    type: RGBA
    http_request_headers:
      If-Modified-Since: !lambda |-
        char age_buf[64];
        auto now = id(sntp_time)->timestamp_now();
        auto time = ESPTime::from_epoch_utc(now - 10 * 60);
        auto age_len = time.strftime(age_buf, sizeof(age_buf), "%a, %d %b %Y %H:%M:%S %z");
        if (age_len != 0) {
          return age_buf;
        } else {
          return {};
        }

# Check the set_url action
time:
  - platform: sntp
    id: sntp_time
    on_time:
      - at: "13:37:42"
        then:
          - online_image.set_url:
              id: online_rgba_image
              url: http://www.example.org/example.png
          - online_image.set_url:
              id: online_rgba_image
              url: !lambda |-
                return "http://www.example.org/example.png";
          - online_image.set_url:
              id: online_rgba_image
              url: !lambda |-
                return str_sprintf("http://homeassistant.local:8123");

